[{"/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/index.js":"1","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/reportWebVitals.js":"2","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/App.jsx":"3","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/services/service.js":"4","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Error/ErrorMessages.js":"5","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Movies/SelectedTypeMovies.jsx":"6","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/WatchList/ViewWatchlist.jsx":"7","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/MovieNavigation/MovieNav.jsx":"8","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/MovieDetail/MovieDetail.jsx":"9","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Logout/Logout.jsx":"10","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Login/Login.jsx":"11","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Search/Search.jsx":"12","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Search/Searchform.jsx":"13","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Credits/Credits.jsx":"14","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Error/Error.jsx":"15","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/WatchList/ButtonWatchList.jsx":"16","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/MovieItem/MovieItem.jsx":"17"},{"size":613,"mtime":1607378933000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607378933000,"results":"20","hashOfConfig":"19"},{"size":12538,"mtime":1607928405000,"results":"21","hashOfConfig":"19"},{"size":5640,"mtime":1607916797000,"results":"22","hashOfConfig":"19"},{"size":414,"mtime":1607918824000,"results":"23","hashOfConfig":"19"},{"size":1013,"mtime":1607916797000,"results":"24","hashOfConfig":"19"},{"size":1888,"mtime":1607919056000,"results":"25","hashOfConfig":"19"},{"size":871,"mtime":1607910665000,"results":"26","hashOfConfig":"19"},{"size":3482,"mtime":1607918519000,"results":"27","hashOfConfig":"19"},{"size":276,"mtime":1607913508000,"results":"28","hashOfConfig":"19"},{"size":2364,"mtime":1607914144000,"results":"29","hashOfConfig":"19"},{"size":1035,"mtime":1607929067000,"results":"30","hashOfConfig":"19"},{"size":748,"mtime":1607930177000,"results":"31","hashOfConfig":"19"},{"size":412,"mtime":1607928577000,"results":"32","hashOfConfig":"19"},{"size":138,"mtime":1607786708000,"results":"33","hashOfConfig":"19"},{"size":2044,"mtime":1607918753000,"results":"34","hashOfConfig":"19"},{"size":2898,"mtime":1607925613000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1rqa3bd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},"/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/index.js",[],["81","82"],"/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/reportWebVitals.js",[],"/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/App.jsx",["83"],"import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Switch, Route, NavLink, Redirect } from \"react-router-dom\";\nimport SelectedTypeMovies from \"./components/Movies/SelectedTypeMovies\";\nimport MovieNav from \"./components/MovieNavigation/MovieNav\";\nimport Login from \"./components/Login/Login\";\nimport Logout from \"./components/Logout/Logout\";\nimport logo from \"./images/reactLogo.png\";\nimport { endSession } from \"./services/service\";\nimport MovieDetail from \"./components/MovieDetail/MovieDetail\";\nimport ViewWatchList from \"./components/WatchList/ViewWatchlist\";\nimport Searchform from \"./components/Search/Searchform\";\nimport Search from \"./components/Search/Search\";\nimport ErrorMessages from \"./components/Error/ErrorMessages\";\nimport Credits from \"./components/Credits/Credits\";\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [currentUser, setCurrentUser] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const login = function ({ username, uid }) {\n        setIsLoggedIn(true);\n        setCurrentUser(uid);\n    };\n    const logoutLoggedinUser = function () {\n        endSession()\n            .then(() => {\n                setIsLoggedIn(false);\n                setCurrentUser(\"\");\n            })\n            .catch((err) => {\n                setError(ErrorMessages[err.error]);\n            });\n    };\n\n    const makeStatusLoggedIn = function (loggedIn) {\n        setIsLoggedIn(loggedIn);\n    };\n\n    if (isLoggedIn) {\n        return (\n            <div>\n                <header className=\"header-style\">\n                    <span className=\"logoSearch\">\n                        <span>\n                            <img src={logo} className=\"logoStyle\" alt=\"xyz\" />\n                        </span>\n                        <span>\n                            <Searchform className=\"search-input\"></Searchform>\n                        </span>\n                    </span>\n                    <span className=\"movieLogin\">\n                        <nav>\n                            <NavLink className=\"nav-tab\" to=\"/credits\">\n                                Credits\n                            </NavLink>\n                            <NavLink className=\"nav-tab\" to=\"/wishlist\">\n                                My Watchlist\n                            </NavLink>\n                            <NavLink className=\"nav-tab\" to=\"/movies\">\n                                Movie\n                            </NavLink>\n                            <NavLink className=\"nav-tab\" to=\"/logout\">\n                                Logout\n                            </NavLink>\n                        </nav>\n                    </span>\n                </header>\n                <div>\n                    <MovieNav></MovieNav>\n                </div>\n                <div>\n                    <Switch>\n                        <Route path=\"/credits\" component={Credits} />\n                        <Route\n                            path=\"/topRatedMovie\"\n                            render={(props) => (\n                                <SelectedTypeMovies\n                                    {...props}\n                                    movieType=\"top_rated\"\n                                    uid={currentUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/nowPlayingMovie\"\n                            render={(props) => (\n                                <SelectedTypeMovies\n                                    {...props}\n                                    movieType=\"now_playing\"\n                                    uid={currentUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/upcomingMovie\"\n                            render={(props) => (\n                                <SelectedTypeMovies\n                                    {...props}\n                                    movieType=\"upcoming\"\n                                    uid={currentUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/movies/:movieid\"\n                            render={(routerProps) => {\n                                const movieid =\n                                    routerProps.match.params.movieid;\n                                console.log(movieid);\n                                return (\n                                    <MovieDetail\n                                        {...routerProps}\n                                        movieid={movieid}\n                                        uid={currentUser}\n                                    />\n                                );\n                            }}\n                        />\n                        <Route\n                            path=\"/movies\"\n                            render={(props) => (\n                                <SelectedTypeMovies\n                                    {...props}\n                                    movieType=\"popular\"\n                                    uid={currentUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/search/:query\"\n                            render={(routerProps) => {\n                                const query = routerProps.match.params.query;\n\n                                return (\n                                    <Search\n                                        {...routerProps}\n                                        query={query}\n                                        uid={currentUser}\n                                        className=\"search-input\"\n                                    />\n                                );\n                            }}\n                        />\n                        <Route\n                            path=\"/wishlist\"\n                            render={(props) => (\n                                <ViewWatchList\n                                    {...props}\n                                    props={{\n                                        uid: currentUser,\n                                    }}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/logout\"\n                            render={(props) => (\n                                <Logout\n                                    {...props}\n                                    props={{\n                                        performLogout: logoutLoggedinUser,\n                                    }}\n                                />\n                            )}\n                        />\n\n                        <Redirect\n                            from=\"/\"\n                            exact\n                            to=\"/movies\"\n                            component={SelectedTypeMovies}\n                        />\n                        <Redirect to=\"/not-found\" />\n                    </Switch>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <header className=\"header-style\">\n                    <span className=\"logoSearch\">\n                        <span>\n                            <img src={logo} className=\"logoStyle\" alt=\"xyz\" />\n                        </span>\n                        <span>\n                            <Searchform className=\"search-input\"></Searchform>\n                        </span>\n                    </span>\n                    <span className=\"movieLogin\">\n                        <nav>\n                            <NavLink className=\"nav-tab\" to=\"/credits\">\n                                Credits\n                            </NavLink>\n                            <NavLink className=\"nav-tab\" to=\"/movies\">\n                                Movie\n                            </NavLink>\n                            <NavLink className=\"nav-tab\" to=\"/login\">\n                                Login\n                            </NavLink>\n                        </nav>\n                    </span>\n                </header>\n                <div>\n                    <MovieNav></MovieNav>\n                </div>\n                <div>\n                    <Switch>\n                        <Route path=\"/credits\" component={Credits} />\n                        <Route\n                            path=\"/topRatedMovie\"\n                            render={(props) => (\n                                <SelectedTypeMovies\n                                    {...props}\n                                    movieType=\"top_rated\"\n                                    uid={currentUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/nowPlayingMovie\"\n                            render={(props) => (\n                                <SelectedTypeMovies\n                                    {...props}\n                                    movieType=\"now_playing\"\n                                    uid={currentUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/upcomingMovie\"\n                            render={(props) => (\n                                <SelectedTypeMovies\n                                    {...props}\n                                    movieType=\"upcoming\"\n                                    uid={currentUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/movies/:movieid\"\n                            render={(routerProps) => {\n                                const movieid =\n                                    routerProps.match.params.movieid;\n                                console.log(movieid);\n                                return (\n                                    <MovieDetail\n                                        {...routerProps}\n                                        movieid={movieid}\n                                        uid={currentUser}\n                                    />\n                                );\n                            }}\n                        />\n                        <Route\n                            path=\"/movies\"\n                            render={(props) => (\n                                <SelectedTypeMovies\n                                    {...props}\n                                    movieType=\"popular\"\n                                    uid={currentUser}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/search/:query\"\n                            render={(routerProps) => {\n                                const query = routerProps.match.params.query;\n\n                                return (\n                                    <Search\n                                        {...routerProps}\n                                        query={query}\n                                        uid={currentUser}\n                                    />\n                                );\n                            }}\n                        />\n                        <Route\n                            path=\"/login\"\n                            render={(props) => (\n                                <Login\n                                    {...props}\n                                    props={{\n                                        onLogin: login,\n                                        makeStatusLoggedIn: makeStatusLoggedIn,\n                                    }}\n                                />\n                            )}\n                        />\n                        <Redirect\n                            from=\"/\"\n                            exact\n                            to=\"/movies\"\n                            component={SelectedTypeMovies}\n                        />\n                        <Redirect to=\"/not-found\" />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/services/service.js",[],"/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Error/ErrorMessages.js",[],"/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Movies/SelectedTypeMovies.jsx",["84","85","86"],"import React from \"react\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { getSelectedTypeMovies } from \"../../services/service\";\nimport MovieItem from \"../MovieItem/MovieItem\";\n\nconst SelectedTypeMovies = ({ movieType, uid }) => {\n    const movie = useRef([]);\n    const [MovieList, setMovieList] = useState([]);\n    const [error, setError] = useState(\"\");\n    useEffect(() => {\n        getSelectedTypeMovies(movieType)\n            .then((data) => {\n                movie.current = data;\n                setMovieData(movie.current.results);\n                setError(\"\");\n            })\n            .catch((err) => setError(err.status_message));\n    }, [movieType]);\n\n    const setMovieData = useCallback((obj) => {\n        setMovieList(\n            obj.map((element) => (\n                <MovieItem key={element.id} props={{ element }} uid={uid} />\n            ))\n        );\n    });\n\n    return <div className=\"movie-container\">{MovieList}</div>;\n};\nexport default SelectedTypeMovies;\n","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/WatchList/ViewWatchlist.jsx",["87","88","89","90"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { getUserWatchlist } from \"../../services/service\";\nimport Error from \"../Error/Error\";\nimport MovieItem from \"../MovieItem/MovieItem\";\nimport \"./WatchList.css\";\nimport ErrorMessages from \"../Error/ErrorMessages\";\n\nconst ViewWatchList = ({ props, uid }) => {\n    const id = props.uid;\n    const savedList = useRef([]);\n    const [watchlist, setWatchlist] = useState([]);\n    const [message, setMessage] = useState(\"\");\n\n    useEffect(() => {\n        getUserWatchlist(id)\n            .then((data) => {\n                if (data) {\n                    savedList.current = data;\n                    updatewatchlist(savedList.current.movies);\n                    setMessage(\"\");\n                } else {\n                    setMessage(\"You dont have movies in your watchlist\");\n                }\n            })\n            .catch((err) => setMessage(ErrorMessages[err.error]));\n    }, []);\n\n    const updatewatchlist = useCallback((obj) => {\n        setWatchlist(\n            obj.map((element) => (\n                <MovieItem\n                    key={element.id}\n                    props={{ element }}\n                    uid={id}\n                    withWatchListButton\n                    updatewatchlist={updatewatchlist}\n                    watchlist={watchlist}\n                />\n            ))\n        );\n    });\n    return (\n        <div>\n            <div className=\"watchlist-title\">MY WATCHLIST</div>\n            <div>\n                {watchlist == \"\" ? (\n                    <div className=\"error-mess\">\n                        <Error message=\"You dont have movies in your watchlist\" />\n                    </div>\n                ) : (\n                    <div className=\"movie-container\">{watchlist}</div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ViewWatchList;\n","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/MovieNavigation/MovieNav.jsx",[],"/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/MovieDetail/MovieDetail.jsx",["91","92"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { getMovieDetails } from \"../../services/service\";\nimport ButtonWatchList from \"../WatchList/ButtonWatchList\";\nimport { MOVIE_DB_IMAGE_URL } from \"../../services/service\";\nimport \"./MovieDetail.css\";\n\nconst MovieDetail = ({ movieid, uid }) => {\n    const [movieDetail, setMovieDetail] = useState({});\n    const [error, setError] = useState(\"\");\n    const getDurationStr = (mins) => {\n        let h = Math.floor(mins / 60);\n        let m = mins % 60;\n        m = m < 10 ? \"0\" + m : m;\n        return `${h}h ${m}m`;\n    };\n    const getReleaseDateStr = (str) => {\n        const date = new Date(str);\n        return (\n            date.getDate() +\n            \".\" +\n            (date.getMonth() + 1) +\n            \".\" +\n            date.getFullYear()\n        );\n    };\n    const budgetStr = movieDetail.budget;\n    const durationStr = getDurationStr(movieDetail.runtime);\n    useEffect(() => {\n        getMovieDetails(movieid)\n            .then((data) => {\n                setMovieDetail(data);\n                setError(\"\");\n            })\n            .catch((err) => setError(err.status_message));\n    }, []);\n\n    if (!movieDetail || movieDetail.id !== Number(movieid)) {\n        return <div>Loading....</div>;\n    }\n    return (\n        <div className=\"movie-detail-container\">\n            <div className=\"detail-container\">\n                <div className=\"movie-poster\">\n                    <img\n                        src={`${\n                            MOVIE_DB_IMAGE_URL.medium + movieDetail.poster_path\n                        }`}\n                        alt={movieDetail.title}\n                        className=\"movie__img\"\n                    />\n                </div>\n                <div className=\"movie-all-details\">\n                    <div className=\"row-title\">\n                        <h2 className=\"moviedetail-title\">\n                            {movieDetail.title}\n                        </h2>\n                        <div className=\"rating-container\">\n                            {movieDetail.vote_average}\n                        </div>\n                    </div>\n                    <div className=\"tagline\">\n                        <div>{movieDetail.tagline}</div>\n                    </div>\n                    <div className=\"movie__control\">\n                        <ButtonWatchList movieDetail={movieDetail} uid={uid} />\n                    </div>\n                    <p className=\"movie-overview\">{movieDetail.overview}</p>\n\n                    <div className=\"genre-conatiner\">\n                        <span>Genres:</span>\n                        {movieDetail.genres.map((o) => (\n                            <span className=\"genres-name\" key={`g${o.id}`}>\n                                {o.name}\n                            </span>\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"movie-all-details release-conatiner\">\n                    <div className=\"release-detail\">\n                        Release Date:\n                        {getReleaseDateStr(movieDetail.release_date)}\n                    </div>\n                    <div className=\"release-detail\">\n                        Duration: {durationStr}\n                    </div>\n                    <div className=\"release-detail\">Budget: ${budgetStr}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default MovieDetail;\n","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Logout/Logout.jsx",[],"/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Login/Login.jsx",["93","94"],"import { useState, useEffect } from \"react\";\nimport { createSession } from \"../../services/service\";\nimport \"./Login.css\";\nimport { checkSession } from \"../../services/service\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorMessages from \"../Error/ErrorMessages\";\n\nconst Login = function ({ props }) {\n    const [username, setUsername] = useState(\"\");\n    const [isDisabled, setIsDisabled] = useState(true);\n    const [error, setError] = useState(\"\");\n    const history = useHistory();\n\n    const onChange = (e) => {\n        setUsername(e.target.value);\n        setIsDisabled(!e.target.value);\n    };\n    useEffect(() => {\n        checkSession()\n            .then((obj) => {\n                props.makeStatusLoggedIn(true);\n            })\n            .catch((error) => {\n                props.makeStatusLoggedIn(false);\n            });\n    }, []);\n\n    const login = () => {\n        createSession({ username })\n            .then((userinfo) => {\n                const uid = userinfo.uid;\n                props.onLogin({ username, uid: userinfo.uid });\n                history.push(`/`);\n                setError(\"\");\n            })\n            .catch((err) => {\n                setError(ErrorMessages[err.error]);\n                console.log(\"error this side\");\n            });\n    };\n\n    return (\n        <div className=\"login-ui\">\n            <div className=\"login-container\">\n                <div className=\"login-component\">\n                    <h1>Login</h1>\n                    <div>\n                        <label>\n                            UserName:\n                            <input\n                                className=\"user-login-name\"\n                                onChange={onChange}\n                                value={username}\n                            ></input>\n                        </label>\n                    </div>\n                    <div className=\"error-message\">{error}</div>\n                    <div className=\"login-button\">\n                        <button\n                            className=\"login\"\n                            onClick={login}\n                            disabled={isDisabled}\n                        >\n                            Login\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Login;\n","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Search/Search.jsx",["95","96","97","98"],"import React from \"react\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { getSearchedMovie } from \"../../services/service\";\nimport MovieItem from \"../MovieItem/MovieItem\";\nimport \"./Search.css\";\n\nconst Search = ({ query, uid }) => {\n    const [MovieList, setMovieList] = useState([]);\n    const [error, setError] = useState(\"\");\n    useEffect(() => {\n        getSearchedMovie(query)\n            .then((data) => {\n                setMovieData(data.results);\n                setError(\"\");\n            })\n            .catch((err) => setError(err.status_message));\n    }, [query]);\n\n    const setMovieData = useCallback((obj) => {\n        setMovieList(\n            obj.map((element) => (\n                <MovieItem key={element.id} props={{ element }} uid={uid} />\n            ))\n        );\n    });\n\n    return (\n        <div>\n            <div className=\"search-query\">Search results \"{query}\"</div>\n            <div className=\"movie-container\">{MovieList}</div>\n        </div>\n    );\n};\nexport default Search;\n","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Search/Searchform.jsx",[],"/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Credits/Credits.jsx",["99"],"import React from \"react\";\nimport creditImage from \"../../images/attributionlogo.png\";\nimport \"./Credits.css\";\n\nconst Credits = () => {\n    return (\n        <div class=\"credit-style\">\n            <img src={creditImage} />\n            <h2>\n                This product uses the TMDb API but is not endorsed or certified\n                by TMDb.\n            </h2>\n        </div>\n    );\n};\n\nexport default Credits;\n","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/Error/Error.jsx",[],"/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/WatchList/ButtonWatchList.jsx",["100","101","102"],"import { useState, useEffect } from \"react\";\nimport { getUserWatchlist, addMovietoWatchList } from \"../../services/service\";\nconst ButtonWatchList = function ({ movieDetail, uid }) {\n    const [presentInwatchlist, setpresentInwatchlist] = useState(false);\n    const [watchList, setWatchList] = useState([]);\n    const [error, setError] = useState(\"\");\n\n    useEffect(() => {\n        if (uid) {\n            getUserWatchlist(uid)\n                .then((obj) => {\n                    setWatchList(obj.movies);\n                    if (\n                        uid &&\n                        watchList.some(\n                            (movie) => movie[\"id\"] === movieDetail.id\n                        )\n                    ) {\n                        setpresentInwatchlist(true);\n                    }\n                })\n                .catch((err) => {\n                    setpresentInwatchlist(false);\n                });\n        }\n    }, [movieDetail]);\n\n    const addToWatchlist = () => {\n        let index = watchList.findIndex(function (item) {\n            return item.id == movieDetail.id;\n        });\n        if (uid == \"\") {\n            setError(\"Please sign in to add movie to watchlist\");\n        } else if (index > -1) {\n            setError(\"Movie already present in watchlist\");\n        } else {\n            addMovietoWatchList(movieDetail, uid)\n                .then((response) => {\n                    setpresentInwatchlist(true);\n                    setError(\"\");\n                })\n                .catch(function (err) {\n                    setError(\"error in adding movie to watchlist\");\n                });\n        }\n    };\n\n    return (\n        <div>\n            <button\n                disabled={presentInwatchlist}\n                className=\"watchlistButton\"\n                onClick={addToWatchlist}\n                id=\"watchlist-btn\"\n            >\n                Add To my watchlist\n            </button>\n            <div className=\"watchlist-error\">{error}</div>\n        </div>\n    );\n};\nexport default ButtonWatchList;\n","/Users/rohit/Desktop/LeenaFolder/info6250repo/student--DaryaniLeena/project/movie-search-app/src/components/MovieItem/MovieItem.jsx",["103"],"import React, { useState, useEffect } from \"react\";\nimport \"./MovieItem.css\";\nimport { getAllGenres } from \"../../services/service\";\nimport { MOVIE_DB_IMAGE_URL } from \"../../services/service\";\nimport { Link } from \"react-router-dom\";\nimport noPhoto from \"./noimage.png\";\nimport {\n    getUserWatchlist,\n    removeMovieFromWatchlist,\n} from \"../../services/service\";\nimport ErrorMessages from \"../Error/ErrorMessages\";\n\nconst MovieItem = ({\n    props,\n    uid,\n    withWatchListButton,\n    watchlist,\n    updatewatchlist,\n}) => {\n    const { title, vote_average, poster_path, id } = props.element;\n    const [genre, setGenre] = useState([]);\n    const [error, setError] = useState(\"\");\n    let { genre_ids } = props.element;\n\n    useEffect(() => {\n        getAllGenres()\n            .then((data) => {\n                setGenre(data.genres);\n                setError(\"\");\n            })\n            .catch((err) => setError(err.status_message));\n    }, []);\n\n    let genresStr = \"\";\n    if (genre_ids) {\n        genresStr = genre_ids\n            .map((id) => {\n                const item = genre.find((item) => item.id === id);\n                return item ? item.name : null;\n            })\n            .join(\", \");\n    }\n\n    const removeFromWatchlist = () => {\n        console.log(uid);\n        removeMovieFromWatchlist(uid, id)\n            .then((response) => {\n                setError(\"\");\n            })\n            .catch(function (err) {\n                setError(ErrorMessages[err.error]);\n            });\n\n        getUserWatchlist(uid)\n            .then((obj) => {\n                if (obj) {\n                    watchlist.current = obj;\n                    updatewatchlist(watchlist.current.movies);\n                    setError(\"\");\n                } else {\n                    setError(\"No data in watchlist\");\n                }\n            })\n            .catch((err) => setError(err.error));\n    };\n\n    return (\n        <div key={id} className=\"cardStyle\">\n            <Link to={`/movies/${id}`}>\n                <img\n                    className=\"imgHeight\"\n                    src={\n                        poster_path\n                            ? MOVIE_DB_IMAGE_URL.medium + poster_path\n                            : noPhoto\n                    }\n                    alt={title}\n                ></img>\n            </Link>\n            <div className=\"movie-detail\">\n                <div className=\"title-style\">{title}</div>\n                <div className=\"rating-style\"> {vote_average}</div>\n                <div>{genresStr}</div>\n                {withWatchListButton && (\n                    <button\n                        className=\"remove-watchlist\"\n                        onClick={removeFromWatchlist}\n                    >\n                        Remove\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MovieItem;\n",["104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":19,"column":12,"nodeType":"112","messageId":"113","endLine":19,"endColumn":17},{"ruleId":"110","severity":1,"message":"111","line":9,"column":12,"nodeType":"112","messageId":"113","endLine":9,"endColumn":17},{"ruleId":"114","severity":1,"message":"115","line":18,"column":8,"nodeType":"116","endLine":18,"endColumn":19,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":20,"column":26,"nodeType":"112","endLine":20,"endColumn":37},{"ruleId":"110","severity":1,"message":"119","line":12,"column":12,"nodeType":"112","messageId":"113","endLine":12,"endColumn":19},{"ruleId":"114","severity":1,"message":"120","line":26,"column":8,"nodeType":"116","endLine":26,"endColumn":10,"suggestions":"121"},{"ruleId":"114","severity":1,"message":"118","line":28,"column":29,"nodeType":"112","endLine":28,"endColumn":40},{"ruleId":"122","severity":1,"message":"123","line":46,"column":28,"nodeType":"124","messageId":"125","endLine":46,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":10,"column":12,"nodeType":"112","messageId":"113","endLine":10,"endColumn":17},{"ruleId":"114","severity":1,"message":"126","line":36,"column":8,"nodeType":"116","endLine":36,"endColumn":10,"suggestions":"127"},{"ruleId":"114","severity":1,"message":"128","line":26,"column":8,"nodeType":"116","endLine":26,"endColumn":10,"suggestions":"129"},{"ruleId":"110","severity":1,"message":"130","line":31,"column":23,"nodeType":"112","messageId":"113","endLine":31,"endColumn":26},{"ruleId":"110","severity":1,"message":"131","line":2,"column":31,"nodeType":"112","messageId":"113","endLine":2,"endColumn":37},{"ruleId":"110","severity":1,"message":"111","line":9,"column":12,"nodeType":"112","messageId":"113","endLine":9,"endColumn":17},{"ruleId":"114","severity":1,"message":"115","line":17,"column":8,"nodeType":"116","endLine":17,"endColumn":15,"suggestions":"132"},{"ruleId":"114","severity":1,"message":"118","line":19,"column":26,"nodeType":"112","endLine":19,"endColumn":37},{"ruleId":"133","severity":1,"message":"134","line":8,"column":13,"nodeType":"135","endLine":8,"endColumn":38},{"ruleId":"114","severity":1,"message":"136","line":26,"column":8,"nodeType":"116","endLine":26,"endColumn":21,"suggestions":"137"},{"ruleId":"122","severity":1,"message":"123","line":30,"column":28,"nodeType":"124","messageId":"125","endLine":30,"endColumn":30},{"ruleId":"122","severity":1,"message":"123","line":32,"column":17,"nodeType":"124","messageId":"125","endLine":32,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":22,"column":12,"nodeType":"112","messageId":"113","endLine":22,"endColumn":17},{"ruleId":"106","replacedBy":"138"},{"ruleId":"108","replacedBy":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMovieData'. Either include it or remove the dependency array.","ArrayExpression",["142"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'message' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'updatewatchlist'. Either include them or remove the dependency array.",["143"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'movieid'. Either include it or remove the dependency array.",["144"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["145"],"'uid' is assigned a value but never used.","'useRef' is defined but never used.",["146"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'uid' and 'watchList'. Either include them or remove the dependency array.",["147"],["140"],["141"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [movieType, setMovieData]",{"range":"160","text":"161"},"Update the dependencies array to be: [id, updatewatchlist]",{"range":"162","text":"163"},"Update the dependencies array to be: [movieid]",{"range":"164","text":"165"},"Update the dependencies array to be: [props]",{"range":"166","text":"167"},"Update the dependencies array to be: [query, setMovieData]",{"range":"168","text":"169"},"Update the dependencies array to be: [movieDetail, uid, watchList]",{"range":"170","text":"171"},[680,691],"[movieType, setMovieData]",[960,962],"[id, updatewatchlist]",[1181,1183],"[movieid]",[855,857],"[props]",[596,603],"[query, setMovieData]",[938,951],"[movieDetail, uid, watchList]"]