{"version":3,"sources":["components/UserList/UserList.jsx","services/services.js","components/MessageList/MessageList.jsx","images/sendIcon.png","components/NewMessage/NewMessage.jsx","components/Login/Login.jsx","components/Logout/Logout.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Userlist","errorMsg","useState","users","setUsers","useEffect","fetch","catch","Promise","reject","error","then","response","ok","json","err","userList","console","log","listOfUsers","Object","values","map","user","className","sender","MessageList","messages","setMessages","messageList","message","index","text","timestamp","NewMessage","currentUser","setMessage","isDisabled","setIsDisabled","onChange","e","target","value","trim","placeholder","disabled","onClick","userName","method","headers","Headers","body","JSON","stringify","resolve","sendMessage","class","src","sendButton","Login","onLogin","username","setUsername","createSession","userinfo","info","Logout","performLogout","App","isLoggedIn","setIsLoggedIn","setCurrentUser","setError","setErrorMethod","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c1ecd17.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getActiveUsers } from \"../../services/services\";\nimport \"./UserList.css\";\n\nconst Userlist = function ({ errorMsg }) {\n    const [users, setUsers] = useState({});\n\n    useEffect(() => {\n        getActiveUsers()\n            .then((userList) => {\n                setUsers(userList);\n                errorMsg(\"\");\n            })\n            .catch(function (err) {\n                errorMsg(err.error);\n                console.log(err.error);\n            });\n    }, []);\n    const listOfUsers = Object.values(users).map((user) => {\n        return (\n            <li className=\"sender-name-item\">\n                <div>\n                    <span>{user.sender}</span>\n                </div>\n            </li>\n        );\n    });\n    return <ul className=\"user-list\">{listOfUsers}</ul>;\n};\n\nexport default Userlist;\n","export const checkSession = () => {\n    return fetch(\"/session\", {\n        method: \"GET\",\n    })\n        .catch(() => Promise.reject({ error: \"network-error\" }))\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return response.json().then((err) => Promise.reject(err));\n        });\n};\n\nexport const createSession = ({ username }) => {\n    return fetch(\"/session\", {\n        method: \"POST\",\n        headers: new Headers({\n            \"content-type\": \"application/json\",\n        }),\n        body: JSON.stringify({ username }),\n    })\n        .catch(() => Promise.reject({ error: \"network-error\" }))\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return response.json().then((err) => Promise.reject(err));\n        });\n};\n\nexport const endSession = () => {\n    return fetch(\"/session\", {\n        method: \"DELETE\",\n    })\n        .catch(() => Promise.reject({ error: \"network-error\" }))\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return response.json().then((err) => Promise.reject(err));\n        });\n};\n\nexport const addUser = ({ username }) => {\n    return fetch(\"/users\", {\n        method: \"POST\",\n        headers: new Headers({ \"content-type\": \"application/json\" }),\n        body: JSON.stringify({ username }),\n    })\n        .catch(() => Promise.reject({ error: \"network-error\" }))\n        .then((response) => {\n            if (response.ok) {\n                return Promise.resolve(response);\n            }\n            return response.json().then((err) => Promise.reject(err));\n        });\n};\n\nexport const getActiveUsers = () => {\n    return fetch(\"/users\")\n        .catch(() => Promise.reject({ error: \"network-error\" }))\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return response.json().then((err) => Promise.reject(err));\n        });\n};\n\nexport const getAllMessages = () => {\n    return fetch(\"/messages\")\n        .catch(() => Promise.reject({ error: \"network-error\" }))\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return response.json().then((err) => Promise.reject(err));\n        });\n};\n\nexport const sendMessage = ({ userName, message }) => {\n    return fetch(\"/message/\" + userName, {\n        method: \"POST\",\n        headers: new Headers({ \"content-type\": \"application/json\" }),\n        body: JSON.stringify({ message }),\n    })\n        .catch(() => Promise.reject({ error: \"network-error\" }))\n        .then((response) => {\n            if (response.ok) {\n                return Promise.resolve(response);\n            }\n            return response.json().then((err) => Promise.reject(err));\n        });\n};\n","import React from \"react\";\nimport \"./MessageList.css\";\nimport { getAllMessages } from \"../../services/services\";\nimport { useState, useEffect } from \"react\";\n\nfunction MessageList({ errorMsg }) {\n    const [messages, setMessages] = useState([]);\n    useEffect(() => {\n        getAllMessages()\n            .then((messageList) => {\n                setMessages(messageList);\n                errorMsg(\"\");\n            })\n            .catch(function (err) {\n                errorMsg(err.error);\n            });\n    }, []);\n\n    return (\n        <ol className=\"all-user-messages\">\n            {messages.map((message, index) => {\n                return (\n                    <li key={index} className=\"user-message\">\n                        <div className=\"sender-container\">\n                            <span className=\"message-sender\">\n                                {message.sender}\n                            </span>\n                        </div>\n                        <div className=\"message-text\">\n                            <span>{message.text}</span>\n                            <span className=\"message-timestamp\">\n                                {message.timestamp}\n                            </span>\n                        </div>\n                    </li>\n                );\n            })}\n        </ol>\n    );\n}\n\nexport default MessageList;\n","export default __webpack_public_path__ + \"static/media/sendIcon.7bbe79a1.png\";","import React, { useState } from \"react\";\nimport { sendMessage } from \"../../services/services\";\nimport \"./NewMessage.css\";\nimport sendButton from \"../../images/sendIcon.png\";\n\nfunction NewMessage({ currentUser, errorMsg }) {\n    const [message, setMessage] = useState(\"\");\n    const [isDisabled, setIsDisabled] = useState(true);\n    const onChange = (e) => {\n        setMessage(e.target.value);\n        setIsDisabled(!e.target.value || e.target.value.trim() === \"\");\n    };\n\n    const saveMessage = () => {\n        const userName = currentUser;\n        sendMessage({ userName, message })\n            .then(function (response) {\n                setMessage(\"\");\n                setIsDisabled(true);\n                errorMsg(\"\");\n            })\n            .catch(function (err) {\n                errorMsg(err.error);\n            });\n    };\n\n    return (\n        <div className=\"send-message\">\n            <input\n                className=\"user-input\"\n                onChange={onChange}\n                value={message}\n                placeholder=\"Enter message...\"\n            />\n            <button\n                className=\"enter-msg-btn\"\n                disabled={isDisabled}\n                onClick={saveMessage}\n            >\n                <img class=\"sendmessage-image\" src={sendButton} />\n            </button>\n        </div>\n    );\n}\n\nexport default NewMessage;\n","import { useState } from \"react\";\nimport { createSession } from \"../../services/services\";\nimport \"./Login.css\";\n\nconst Login = function ({ onLogin, errorMsg }) {\n    const [username, setUsername] = useState(\"\");\n    const [isDisabled, setIsDisabled] = useState(true);\n\n    const onChange = (e) => {\n        setUsername(e.target.value);\n        setIsDisabled(!e.target.value);\n    };\n\n    const login = () => {\n        createSession({ username })\n            .then((userinfo) => {\n                onLogin({ username, info: userinfo.info });\n                errorMsg(\"\");\n            })\n            .catch((err) => {\n                errorMsg(err.error);\n            });\n    };\n\n    return (\n        <div className=\"login-component\">\n            <div>\n                <label>\n                    UserName:\n                    <input\n                        className=\"user-login-name\"\n                        onChange={onChange}\n                        value={username}\n                    ></input>\n                </label>\n            </div>\n            <div class=\"login-button\">\n                <button class=\"login\" onClick={login} disabled={isDisabled}>\n                    Login\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default Login;\n","import \"./Logout.css\";\n\nfunction Logout({ performLogout }) {\n    return (\n        <div className=\"logout-container\">\n            <button className=\"logout-button\" onClick={performLogout}>\n                Logout\n            </button>\n        </div>\n    );\n}\nexport default Logout;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { endSession, checkSession } from \"./services/services\";\nimport UserList from \"./components/UserList/UserList\";\nimport MessageList from \"./components/MessageList/MessageList\";\nimport NewMessage from \"./components/NewMessage/NewMessage\";\nimport Login from \"./components/Login/Login\";\nimport Logout from \"./components/Logout/Logout\";\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [currentUser, setCurrentUser] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const errMsgs = {\n        \"network-error\":\n            \"Status: There was a problem connecting to the network, try again\",\n        \"bad-login\": \"Status: Bad-login: This value is not allowed\",\n        \"login-required\": \"Status: User must login\",\n        \"session-invalid\":\n            \"This user session is not valid. Please login again.\",\n    };\n    useEffect(() => {\n        checkSession()\n            .then((userinfo) => {\n                setIsLoggedIn(true);\n                setCurrentUser(userinfo);\n                setError(\"\");\n            })\n            .catch((error) => {\n                setIsLoggedIn(false);\n                setError(error.err);\n            });\n    }, []);\n    const login = function ({ username }) {\n        setIsLoggedIn(true);\n        setCurrentUser(username);\n    };\n    const logout = function () {\n        endSession()\n            .then(() => {\n                setIsLoggedIn(false);\n                setCurrentUser(\"\");\n                setError(\"\");\n            })\n            .catch((error) => {\n                setError(error.err);\n            });\n    };\n    const setErrorMethod = function (error) {\n        setError(error);\n    };\n    return (\n        <div>\n            {\" \"}\n            {isLoggedIn ? (\n                <div className=\"chat-window-container\">\n                    <div className=\"chat-app\">\n                        <div className=\"chat-header\">\n                            <div className=\"heading\">\n                                <div className=\"title-conatiner\">\n                                    Chat Application\n                                </div>\n                            </div>\n                            <div className=\"logout\">\n                                <Logout performLogout={logout} />\n                            </div>\n                        </div>\n                        <div className=\"chat-content\">\n                            <div className=\"user-list-container\">\n                                <UserList errorMsg={setErrorMethod} />\n                            </div>\n                            <div className=\"message-list-container\">\n                                <MessageList errorMsg={setErrorMethod} />\n                            </div>\n                            <div className=\"send-message-container\">\n                                <NewMessage\n                                    currentUser={currentUser}\n                                    errorMsg={setErrorMethod}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div class=\"login-container\">\n                    <Login onLogin={login} errorMsg={setErrorMethod} />\n                </div>\n            )}\n            <div class=\"status-component\">\n                <span class=\"status\">{errMsgs[error]}</span>\n            </div>\n        </div>\n    );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}